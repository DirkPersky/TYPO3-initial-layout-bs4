#!/usr/bin/env node
'use strict';

var fs = require('fs');

function copyFile(source, target, cb) {
  var cbCalled = false;

  var rd = fs.createReadStream(source);
  rd.on("error", done);

  var wr = fs.createWriteStream(target);
  wr.on("error", done);
  wr.on("close", function(ex) {
    done();
  });
  rd.pipe(wr);

  function done(err) {
    if (!cbCalled) {
      cb(err);
      cbCalled = true;
    }
  }
}

function copyDir(source, target){
  var files = fs.readdirSync(source);

  fs.mkdir(target,function(e){
    if(!e || (e && e.code === 'EEXIST')){
      //do something with contents
      for (var file of files) {
        copyFile(source+file, target+file, function(err){
          if(err){
            console.log('ERROR',err);
          }
        });
      }
      console.log(source+" is copyed!");
    } else {
      //debug
      console.log(e);
    }
  });
}

// copyDir('node_modules/bootstrap-sass/assets/fonts/bootstrap/','app/Resources/Public/fonts/bootstrap/');
copyDir('node_modules/font-awesome/fonts/','app/Resources/Public/fonts/fontawesome/');

copyFile('node_modules/animate.css/animate.min.css', 'app/Resources/Public/css/animate.min.css', function(err){
  if(err){
    console.log('ERROR',err);
  } else {
    console.log('node_modules/animate.css/animate.min.css'+" is copyed!");
  }
});

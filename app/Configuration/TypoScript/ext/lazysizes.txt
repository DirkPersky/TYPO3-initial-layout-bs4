################################################
### Extend tx_nwtimagecrop_cropscaling_ratio ###
################################################
#<INCLUDE_TYPOSCRIPT: source="FILE:fileadmin/Mysite4/app/Configuration/TypoScript/ext/tx_nwtimagecrop_cropscaling_ratio.txt">

##########################################
### Responsive Layout for Lazy Loading ###
##########################################
tt_content.image.20.1.layout {
  lazyloading {
    element (
      <picture>
        <!-- Responsive -->
        ###SOURCECOLLECTION###
        <!-- Default -->
        <source srcset="###SRC###" ###ALTPARAMS### ###SELFCLOSINGTAGSLASH### data-width="###WIDTH###" data-height="###HEIGHT###">

        <img
          src="###SRC###"
          width="###WIDTH###"
          height="###HEIGHT###"
          ###PARAMS######ALTPARAMS######BORDER######SELFCLOSINGTAGSLASH###>
      </picture>
    )
    source = <source srcset="###SRC###" media="###MEDIAQUERY###" ###ALTPARAMS### ###SELFCLOSINGTAGSLASH### data-width="###WIDTH###" data-height="###HEIGHT###" data-format="###DATAKEY###">
  }
}

###############################################
### Responsive Breakpoints for Lazy Loading ###
###############################################
tt_content.image.20.1 {
  params = class="img-fluid lazyload"
}

tt_content.image.20.1.sourceCollection >
tt_content.image.20.1.sourceCollection {
  xl {
    maxW = 1960

    width < tt_content.image.20.1.file.width
    height < tt_content.image.20.1.file.height

    srcsetCandidate = 1960w
    mediaQuery = (min-device-width:1200px)
    dataKey = xl

    if {
      value = 1200
      isGreaterThan.field = imagewidth

      isTrue = 1
      isTrue.if {
        isTrue.field = imagewidth
      }
    }
  }
  lg {
    maxW = 1200

    width = 1200
    width.override.cObject = CASE
    width.override.cObject {
      setCurrent.field = imagecols
      key.field = imagecols

      default = TEXT
      default.value = 250

      1 < .default
      1.value = 1200

      2 < .default
      2.value = 600

      3 < .default
      3.value = 400

      4 < .default
      4.value = 300
    }

    height < tt_content.image.20.1.sourceCollectionCropscaling.height
    height.cObject.value < .width
    width.stdWrap < tt_content.image.20.1.sourceCollectionCropscaling.width.stdWrap

    srcsetCandidate = 1200w
    mediaQuery = (min-device-width:992px)
    dataKey = lg

    if {
      value = 992
      isGreaterThan.field = imagewidth

      isTrue = 1
      isTrue.if {
        isTrue.field = imagewidth
      }
    }
  }
  md {
    maxW = 992

    width = 992
    width.override.cObject = CASE
    width.override.cObject {
      setCurrent.field = imagecols
      key.field = imagecols

      default = TEXT
      default.value = 199

      1 < .default
      1.value = 992

      2 < .default
      2.value = 496

      3 < .default
      3.value = 331

      4 < .default
      4.value = 248
    }
    height < tt_content.image.20.1.sourceCollectionCropscaling.height
    height.cObject.value < .width
    width.stdWrap < tt_content.image.20.1.sourceCollectionCropscaling.width.stdWrap

    srcsetCandidate = 992w
    mediaQuery = (min-device-width:768px)
    dataKey = md

    if {
      value = 768
      isGreaterThan.field = imagewidth

      isTrue = 1
      isTrue.if {
        isTrue.field = imagewidth
      }
    }
  }
  sm {
    maxW = 480

    width = 768
    width.override.cObject = CASE
    width.override.cObject {
      setCurrent.field = imagecols
      key.field = imagecols

      default = TEXT
      default.value = 154

      1 < .default
      1.value = 768

      2 < .default
      2.value = 384

      3 < .default
      3.value = 256

      4 < .default
      4.value = 192
    }
    height < tt_content.image.20.1.sourceCollectionCropscaling.height
    height.cObject.value < .width
    width.stdWrap < tt_content.image.20.1.sourceCollectionCropscaling.width.stdWrap

    srcsetCandidate = 768w
    mediaQuery = (min-device-width:480px)
    dataKey = sm

    if {
      value = 480
      isGreaterThan.field = imagewidth

      isTrue = 1
      isTrue.if {
        isTrue.field = imagewidth
      }
    }
  }
}

##########################
### Load Retina Images ###
##########################
#<INCLUDE_TYPOSCRIPT: source="FILE:fileadmin/Mysite4/app/Configuration/TypoScript/ext/lazysizesRetina.txt">

############################
### EXECUTE LAZY LOADING ###
############################
page.jsInline.91 = TEXT
page.jsInline.91.value (
  /**
   * LazySize.js Placeholder Config
   */
  window.lazySizesConfig = window.lazySizesConfig || {};
  window.lazySizesConfig = {
    addClasses: true,
    expFactor: 1
  };
)

#####################
### DEFAULT IMAGE ###
#####################
temp.image {

  params = class="img-responsive lazyload"

  layoutKey < tt_content.image.20.1.layoutKey
  layout  < tt_content.image.20.1.layout
  sourceCollection  < tt_content.image.20.1.sourceCollection
}

######################################
### Lets get smal Image as default ###
######################################
tt_content.image.20 {
  1.file {
    width >
    width.field = imagewidth
    width.override {
      cObject = CASE
      cObject {
        setCurrent.field = imagecols
        key.field = imagecols

        default = TEXT
        default.value = 96

        1 < .default
        1.value = 480

        2 < .1

        3 < .default
        3.value = 160

        4 < .default
        4.value = 120
      }

      if {
        value = 480
        isGreaterThan.field = imagewidth

        isTrue = 1
        isTrue.if {
          isTrue.field = imagewidth
        }
      }
    }

    height >
    height =
    height.override < tt_content.image.20.1.sourceCollectionCropscaling.height
    height.override.cObject {
      value.field = imagewidth
      override < tt_content.image.20.1.file.width.override
    }

    width.stdWrap < tt_content.image.20.1.sourceCollectionCropscaling.width.stdWrap
  }
}
